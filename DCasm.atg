COMPILER DCasm

	public CodeGenerator gen;
  public NodeFactory factory;
  
/*--------------------------------------------------------------------------*/
CHARACTERS
  letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
  digit = "0123456789".
  firstDigit = "0123".
  cr  = '\r'.
  lf  = '\n'.
  tab = '\t'.

TOKENS
  ident  = letter {letter | digit}.
  number = digit {digit}.
  registerNum = "$" [firstDigit] digit.

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO lf

IGNORE cr + lf + tab


PRODUCTIONS
/*------------------------------------------------------------------------*/
DCasm                    (. string name; Root root; .)
= "program"   
  { arithm  }
  EOF.


register<out INode node> 
= registerNum (. node = factory.Create("register"); .).


const<out string val>
= number (. val = t.val; .).


arithm 
= (. string op; .)
  (
    arithmOp<out string op> register<out INode dest> register<out INode src1> register<out INode src2>
    |
    arithmImOp<out string op> register<out INode dest> register<out INode src1> const<out string imm>
  ).


arithmOp<out string op>
= ("add" | "sub" | "div" | "mul") (. op = t.val; .).


arithmImOp<out string op>
= ("addi" | "subu" | "divu" | "mulu") (. op = t.val .).

END DCasm.