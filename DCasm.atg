COMPILER DCasm

	public CodeGenerator gen;
  
/*--------------------------------------------------------------------------*/
CHARACTERS
  letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
  digit = "0123456789".
  firstDigit = "0123".
  cr  = '\r'.
  lf  = '\n'.
  tab = '\t'.

TOKENS
  ident  = letter {letter | digit}.
  number = digit {digit}.
  registerNum = "$" [firstDigit] digit.

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO lf

IGNORE cr + lf + tab


PRODUCTIONS
/*------------------------------------------------------------------------*/
DCasm
= "program" 
{ 
  arithm<out INode exp> (. gen.treeRoot.Childrens.Add(exp); .)
} 
EOF.


register<out INode node> 
= registerNum (. node = new Register(); node.Value = t.val; .).


constant<out INode val>
= number (.val = new Const(t.val); .).


arithm<out INode exp>
= (. exp = new Error(); .)
  (
    arithmOp<out exp> 
    register<out INode dest> 
    register<out INode src1> 
    register<out INode src2> 
    (. exp.Childrens.Add(dest); exp.Childrens.Add(src1); exp.Childrens.Add(src2); .)
    |
    arithmImOp<out exp> 
    register<out INode dest> 
    register<out INode src1> 
    constant<out INode imm> 
    (. exp.Childrens.Add(dest); exp.Childrens.Add(src1); exp.Childrens.Add(imm); .)
  ).


arithmOp<out INode exp>
= (. exp = new Error(); .)
  (
    "add" (. exp = new Add("add", true); .)
    | "sub" (. exp = new Sub("sub", true); .)
    | "div" (. exp = new Div("sub", true); .)
    | "mul" (. exp = new Mul("sub", true); .)

    | "addu" (. exp = new Add("addu", false); .)
    | "subu" (. exp = new Sub("subu", false); .)
    | "mulu" (. exp = new Mul("mulu", false); .)
    | "divu" (. exp = new Div("divu", false); .)
  )
.


arithmImOp<out INode exp>
= (. exp = new Error(); .)
  (
    "addi" (. exp = new Add("addi", true); .)
    | "subi" (. exp = new Sub("subi", true); .)
    | "divi" (. exp = new Div("subi", true); .)
    | "muli" (. exp = new Mul("subi", true); .)

    | "addiu" (. exp = new Add("addiu", false); .)
    | "subiu" (. exp = new Sub("subiu", false); .)
    | "muliu" (. exp = new Mul("muliu", false); .)
    | "diviu" (. exp = new Div("diviu", false); .)
  )
.

END DCasm.